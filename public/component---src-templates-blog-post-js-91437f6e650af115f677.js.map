{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","props","render","post","this","data","markdownRemark","pageContext","previous","next","title","frontmatter","description","spoiler","slug","fields","className","date","tags","map","tag","key","to","toLowerCase","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","rel","icon","faArrowLeft","draft","faArrowRight","React","Component","pageQuery"],"mappings":"qOAQMA,E,oBACJ,WAAYC,GAAQ,OAClB,YAAMA,IADW,K,0GAInBC,OAAA,WACE,IAAMC,EAAOC,KAAKH,MAAMI,KAAKC,eADtB,EAEoBF,KAAKH,MAAMM,YAA9BC,EAFD,EAECA,SAAUC,EAFX,EAEWA,KAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOP,EAAKQ,YAAYD,MACxBE,YAAaT,EAAKQ,YAAYE,QAC9BC,KAAMX,EAAKY,OAAOD,OAEpB,yBAAKE,UAAU,WACb,4BAAKb,EAAKQ,YAAYD,OACtB,uBAAGM,UAAU,YACVb,EAAKQ,YAAYM,KADpB,QAGGd,EAAKQ,YAAYO,MAChBf,EAAKQ,YAAYO,KAAKC,KAAI,SAAAC,GAAG,OAC3B,0BAAMC,IAAKD,EAAKJ,UAAU,gBACxB,kBAAC,OAAD,CAAMM,GAAI,SAAWF,EAAIG,eAAzB,IAA0CH,QAIlD,6BAASI,wBAAyB,CAAEC,OAAQtB,EAAKuB,SAEnD,yBAAKV,UAAU,eACb,wBACEW,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGxB,GACC,kBAAC,OAAD,CAAMc,GAAId,EAASO,OAAOD,KAAMmB,IAAI,QAClC,kBAAC,IAAD,CAAiBC,KAAMC,MADzB,IAC0C3B,EAASG,YAAYD,QAInE,4BACGD,IAASA,EAAKE,YAAYyB,OACzB,kBAAC,OAAD,CAAMd,GAAIb,EAAKM,OAAOD,KAAMmB,IAAI,QAC5BxB,EAAKE,YAAYD,MADrB,IAC4B,kBAAC,IAAD,CAAiBwB,KAAMG,Y,GAlDpCC,IAAMC,WA6DtBvC,YAER,IAAMwC,EAAS","file":"component---src-templates-blog-post-js-91437f6e650af115f677.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/Layout/Layout';\nimport SEO from '../components/SEO/SEO';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nclass BlogPostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const post = this.props.data.markdownRemark;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <div className=\"article\">\n          <h1>{post.frontmatter.title}</h1>\n          <p className=\"subtitle\">\n            {post.frontmatter.date}\n            &nbsp; â€¢ &nbsp;\n            {post.frontmatter.tags &&\n              post.frontmatter.tags.map(tag => (\n                <span key={tag} className=\"subtitle-tag\">\n                  <Link to={'/tags/' + tag.toLowerCase()}>#{tag}</Link>\n                </span>\n              ))}\n          </p>\n          <article dangerouslySetInnerHTML={{ __html: post.html }} />\n        </div>\n        <div className=\"post-footer\">\n          <ul\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n              listStyle: 'none',\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  <FontAwesomeIcon icon={faArrowLeft} /> {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && !next.frontmatter.draft && (\n                <Link to={next.fields.slug} rel=\"next\">\n                   {next.frontmatter.title} <FontAwesomeIcon icon={faArrowRight} />\n                </Link>\n              )}\n            </li>\n          </ul>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n        path\n        tags\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}